{"version":3,"sources":["components/DataBody.js","components/DataTable.js","components/SearchBox.js","components/Nav.js","utils/API.js","components/DataArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["DataBody","users","undefined","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","thumbnail","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","DataTable","headings","handleSort","id","width","style","onClick","toLowerCase","SearchBox","handleSearchChange","type","placeholder","aria-label","onChange","event","Nav","axios","get","DataArea","state","order","filteredUsers","heading","console","log","setState","sortedUsers","sort","a","b","localeCompare","value","filter","filteredList","item","Object","values","indexOf","API","then","results","data","this","Component","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.336015f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/DataBody.css\";\r\n\r\nfunction DataBody({ users }) {\r\n  function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join(\"-\");\r\n    return formattedDate;\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {users[0] !== undefined && users[0].name !== undefined ? (\r\n        users.map(({ login, name, picture, phone, email, dob }) => {\r\n          return (\r\n            <tr key={login.uuid}>\r\n              <td data-th=\"Image\" className=\"align-middle\">\r\n                <img\r\n                  // ADD ATTRIBUTE SRC FOR IMAGE\r\n                  src={picture.thumbnail}\r\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                  className=\"img-responsive\"\r\n                />\r\n              </td>\r\n              <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                {name.first} {name.last}\r\n              </td>\r\n              <td data-th=\"Phone\" className=\"align-middle\">\r\n                {phone}\r\n              </td>\r\n              <td data-th=\"Email\" className=\"align-middle\">\r\n                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                  {email}\r\n                </a>\r\n              </td>\r\n              <td data-th=\"DOB\" className=\"align-middle\">\r\n                {formatDate(dob.date)}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default DataBody;\r\n","import React from \"react\";\r\nimport DataBody from \"./DataBody\";\r\nimport \"../styles/DataTable.css\";\r\n\r\nfunction DataTable({ headings, users, handleSort }) {\r\n  return (\r\n    <div className=\"datatable mt-5\">\r\n      <table\r\n        id=\"table\"\r\n        className=\"table table-striped table-hover table-condensed\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            {\r\n              /* ADD A LINE OF CODE TO LOOP THROUGH HEADINGS WITH .map METHOD\r\n                DESTRUCTURE INPUT ARGUMENT TO EXTRACT NAME and WIDTH */\r\n              headings.map(({ name, width }) => {\r\n                return (\r\n                  <th\r\n                    className=\"col\"\r\n                    // ADD KEY AND ASSIGN IT WITH NAME PASSED IN\r\n                    key={name}\r\n                    // ADD STYLE FOR WIDTH WITH WIDTH PASSED IN\r\n                    style={{ width }}\r\n                    // ADD ONCLICK EVENT TO CALL CALLBACK PASSED IN\r\n                    onClick={() => {\r\n                      handleSort(name.toLowerCase());\r\n                    }}\r\n                  >\r\n                    {/* / ADD HEADING NAME PASSED IN HERE / */}\r\n                    {name}\r\n                    <span className=\"pointer\"></span>\r\n                  </th>\r\n                );\r\n              })\r\n            }\r\n            {/* })} */}\r\n          </tr>\r\n        </thead>\r\n        {/* ADD CODE TO CALL COMPONENT DATABODY PASSING USERS AS INPUT ARGUMENT */}\r\n        <DataBody users={users}></DataBody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport \"../styles/SearchBox.css\";\r\n\r\nfunction SearchBox({ handleSearchChange }) {\r\n  return (\r\n    <div className=\"searchbox\">\r\n      <form className=\"form-inline\">\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          // ADD ONCHANGE EVENT AND ASSIGN THE CALLBACK PASSED IN TO IT\r\n          // THIS CALLBACK TAKES IN EVENT AS INPUT ARGUMENT\r\n          onChange={(event) => handleSearchChange(event)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport SearchBox from \"./SearchBox.js\";\r\nimport \"../styles/Nav.css\";\r\n\r\nfunction Nav({ handleSearchChange }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n      <div className=\"navbar-collapse row\" id=\"navbarNav\">\r\n        {/* ADD CODE TO CALL THE SEARCHBOX COMPONENT WITH THE CALLBACK PASSED IN AS INPUT ARGUMENT */}\r\n        <SearchBox handleSearchChange={handleSearchChange} />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all users\r\n  getUsers: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport DataTable from \"./DataTable\";\r\nimport Nav from \"./Nav\";\r\nimport API from \"../utils/API\";\r\nimport \"../styles/DataArea.css\";\r\n\r\nexport default class DataArea extends Component {\r\n  state = {\r\n    users: [{}],\r\n    order: \"descend\",\r\n    filteredUsers: [{}],\r\n  };\r\n\r\n  headings = [\r\n    { name: \"Image\", width: \"10%\" },\r\n    { name: \"Name\", width: \"10%\" },\r\n    { name: \"Phone\", width: \"20%\" },\r\n    { name: \"Email\", width: \"20%\" },\r\n    { name: \"DOB\", width: \"10%\" },\r\n  ];\r\n\r\n  handleSort = (heading) => {\r\n    console.log(\"handleSort - heading\", heading);\r\n\r\n    if (this.state.order === \"descend\") {\r\n      this.setState({\r\n        order: \"ascend\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        order: \"descend\",\r\n      });\r\n    }\r\n\r\n    const compareFnc = (a, b) => {\r\n      // console.log(\"compareFnc - a, b\", a, b);\r\n      console.log(\"compareFnc\");\r\n\r\n      if (this.state.order === \"ascend\") {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return a[heading].first.localeCompare(b[heading].first);\r\n        } else {\r\n          return a[heading] - b[heading];\r\n        }\r\n      } else {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return b[heading].first.localeCompare(a[heading].first);\r\n        } else {\r\n          return b[heading] - a[heading];\r\n        }\r\n      }\r\n    };\r\n    const sortedUsers = this.state.filteredUsers.sort(compareFnc);\r\n    this.setState({ filteredUsers: sortedUsers });\r\n  };\r\n\r\n  handleSearchChange = (event) => {\r\n    console.log(event.target.value);\r\n    const filter = event.target.value;\r\n    const filteredList = this.state.users.filter((item) => {\r\n      // merge data together, then see if user input is anywhere inside\r\n      let values = Object.values(item).join(\"\").toLowerCase();\r\n      return values.indexOf(filter.toLowerCase()) !== -1;\r\n    });\r\n    this.setState({ filteredUsers: filteredList });\r\n  };\r\n\r\n  componentDidMount() {\r\n    API.getUsers().then((results) => {\r\n      this.setState({\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Nav handleSearchChange={this.handleSearchChange} />\r\n        <div className=\"data-area\">\r\n          <DataTable\r\n            headings={this.headings}\r\n            users={this.state.filteredUsers}\r\n            handleSort={this.handleSort}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataArea from \"./DataArea\";\r\nimport \"../styles/Main.css\";\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <DataArea />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/Wrapper.css\";\r\n\r\nfunction Wrapper({ children }) {\r\n  return <div className=\"wrapper\">{children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Employee Directory</h1>\r\n        <p>\r\n          Click on carrots to filter by heading or use the search box to narrow\r\n          your results.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}